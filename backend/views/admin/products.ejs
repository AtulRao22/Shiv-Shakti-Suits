<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin - Products</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">


  <style>
    body { background-color: #f8f9fa; font-family: 'Segoe UI', sans-serif; }
    .table img { width: 60px; height: 60px; object-fit: cover; border-radius: 8px; }
    .card { box-shadow: 0 3px 8px rgba(0,0,0,0.1); border: none; border-radius: 15px; }
    .card-header {
      background: #fff;
      border-bottom: 1px solid #ddd;
      border-top-left-radius: 15px;
      border-top-right-radius: 15px;
      padding: 15px 20px;
    }
    h4.mb-0 {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      font-weight: 700;
    }
    .btn-primary {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      border: none;
    }
    .btn-warning { color: #fff; }

    .table th, .table td { vertical-align: middle; white-space: nowrap; }

    /* Stock Colors */
    .stock-low { color: #ffc107; font-weight: 600; }  /* Yellow */
    .stock-out { color: #dc3545; font-weight: 700; }  /* Red */
    .stock-ok  { color: #198754; font-weight: 600; }  /* Green */

    /* Mobile Optimizations */
    @media (max-width: 768px) {
      .table-responsive { font-size: 0.9rem; }
      .table img { width: 50px; height: 50px; }
      .card { margin: 0 5px; }
      .btn-sm i { font-size: 1rem; }
    }
  </style>
</head>

<body>
  <div class="container mt-4">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center flex-wrap">
        <h4 class="mb-0">All Products</h4>
        <a href="/admin/add-product" class="btn btn-primary btn-sm mt-2 mt-md-0">
          <i class="fa fa-plus"></i> Add Product
        </a>
      </div>

      <div class="card-body">
        <% if (products.length === 0) { %>
          <p class="text-center text-muted mt-3">No products found.</p>
        <% } else { %>
          <div class="table-responsive">
            <table class="table table-hover align-middle">
              <thead class="table-dark">
                <tr>
                  <th>#</th>
                  <th>Photo</th>
                  <th>Name</th>
                  <th>Category</th>
                  <th>Price</th>
                  <th>Tags</th>
                  <th>Stock</th>
                  <th class="text-end">Actions</th>
                </tr>
              </thead>
              <tbody>
                <% products.forEach((p, i) => {
                     const totalStock = (p.variants && p.variants.length > 0)
                       ? p.variants.reduce((sum, v) => sum + (v.stock || 0), 0)
                       : (p.stock || 0);
                %>
                  <tr>
                    <td><%= i + 1 %></td>
                    <td>
                      <% if (p.imageUrls && p.imageUrls.length > 0) { %>
                        <img src="<%= p.imageUrls[0] %>" alt="<%= p.name %>">
                      <% } else { %>
                        <img src="/assets/no-image.jpg" alt="No image">
                      <% } %>
                    </td>
                    <td><strong><%= p.name %></strong></td>
                    <td><%= p.category %></td>
                    <td>₹<%= p.salePrice || p.mrp %></td>
                    <td>
                      <% if (totalStock === 0) { %>
                        <span class="stock-out"><%= totalStock %></span>
                      <% } else if (totalStock < 2) { %>
                        <span class="stock-low"><%= totalStock %></span>
                      <% } else { %>
                        <span class="stock-ok"><%= totalStock %></span>
                      <% } %>
                    </td>
                  <td class="text-end">
                  <button class="btn btn-warning btn-sm me-1 edit-btn" data-id="<%= p._id %>" title="Edit">
                  <i class="fa fa-edit"></i>
                  </button>

                  <button class="btn btn-danger btn-sm delete-btn" data-id="<%= p._id %>" title="Delete">
                  <i class="fa fa-trash"></i>
                  </button>
                  </td>

                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        <% } %>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
 <script>
document.addEventListener("DOMContentLoaded", () => {

  // DELETE with SweetAlert2
  document.querySelectorAll('.btn-danger').forEach(btn => {
    btn.addEventListener('click', async () => {
      const row = btn.closest("tr");
      const id = btn.dataset.id;

      const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
      });

      if (!result.isConfirmed) return;

      try {
        const res = await fetch(`/api/products/${id}`, { method: "DELETE" });
        if (res.ok) {
          row.remove();
          Swal.fire('Deleted!', 'Product has been deleted.', 'success');
        } else {
          const data = await res.json();
          Swal.fire('Error', data.error || 'Failed to delete product', 'error');
        }
      } catch (err) {
        console.error(err);
        Swal.fire('Error', 'Something went wrong.', 'error');
      }
    });
  });

  // EDIT with SweetAlert2
  document.querySelectorAll('.btn-warning').forEach(btn => {
    btn.addEventListener('click', async () => {
      const row = btn.closest("tr");
      const id = btn.dataset.id;
      const nameCell = row.children[2];
      const priceCell = row.children[4];
      const stockCell = row.children[5];
      const currentTags = row.dataset.tags || "";

      const { value: formValues } = await Swal.fire({
        title: 'Edit Product',
        html:
          `<input id="swal-name" class="swal2-input" placeholder="Product Name" value="${nameCell.textContent}">` +
          `<input id="swal-price" type="number" class="swal2-input" placeholder="Price" value="${priceCell.textContent.replace("₹","")}">` +
          `<input id="swal-stock" type="number" class="swal2-input" placeholder="Stock" value="${stockCell.textContent}">` +
          `<input id="swal-tags" class="swal2-input" placeholder="Tags (comma separated)" value="${currentTags}">`,
        focusConfirm: false,
        showCancelButton: true,
        confirmButtonText: 'Save',
        cancelButtonText: 'Cancel',
        preConfirm: () => ({
          name: document.getElementById('swal-name').value,
          price: document.getElementById('swal-price').value,
          stock: document.getElementById('swal-stock').value,
          tags: document.getElementById('swal-tags').value
        })
      });

      if (!formValues) return;

      try {
        const res = await fetch(`/api/products/${id}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            name: formValues.name,
            salePrice: Number(formValues.price),
            stock: Number(formValues.stock),
            tags: formValues.tags.split(",").map(t => t.trim())
          })
        });

        if (res.ok) {
          nameCell.textContent = formValues.name;
          priceCell.textContent = "₹" + formValues.price;

          // Update stock color
          let stockClass = "stock-ok";
          if (Number(formValues.stock) === 0) stockClass = "stock-out";
          else if (Number(formValues.stock) < 2) stockClass = "stock-low";
          stockCell.innerHTML = `<span class="${stockClass}">${formValues.stock}</span>`;

          row.dataset.tags = formValues.tags;

          Swal.fire('Updated!', 'Product updated successfully.', 'success');
        } else {
          const data = await res.json();
          Swal.fire('Error', data.error || 'Failed to update product', 'error');
        }
      } catch (err) {
        console.error(err);
        Swal.fire('Error', 'Something went wrong.', 'error');
      }
    });
  });

});
</script>

</body>
</html>
